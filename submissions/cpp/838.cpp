class Solution {
public:
\u0009string pushDominoes(string dominoes) {
\u0009\u0009int length = dominoes.length();
\u0009\u0009string ret;
\u0009\u0009int start = 0;
\u0009\u0009for (int i = 0; i <= length; ++i) {\u0009//".L.R."
\u0009\u0009\u0009if (dominoes[i] == \u0027L\u0027) {
\u0009\u0009\u0009\u0009for (int j = start; j <= i; ++j)
\u0009\u0009\u0009\u0009\u0009ret.push_back(\u0027L\u0027);
\u0009\u0009\u0009\u0009start = i + 1;
\u0009\u0009\u0009}
\u0009\u0009\u0009else if (dominoes[i] == \u0027R\u0027) {
\u0009\u0009\u0009\u0009ret.append(i - start, \u0027.\u0027);
\u0009\u0009\u0009\u0009int j = i + 1;
\u0009\u0009\u0009\u0009while (j <= length) {
\u0009\u0009\u0009\u0009\u0009if (j == length) {
\u0009\u0009\u0009\u0009\u0009\u0009ret.append(j - i, \u0027R\u0027);
\u0009\u0009\u0009\u0009\u0009\u0009i = j + 1;
\u0009\u0009\u0009\u0009\u0009\u0009break;
\u0009\u0009\u0009\u0009\u0009}
\u0009\u0009\u0009\u0009\u0009else if (dominoes[j] == \u0027L\u0027) {
\u0009\u0009\u0009\u0009\u0009\u0009int l = j - i;
\u0009\u0009\u0009\u0009\u0009\u0009if (l % 2 == 0) {
\u0009\u0009\u0009\u0009\u0009\u0009\u0009ret.append(l / 2, \u0027R\u0027);
\u0009\u0009\u0009\u0009\u0009\u0009\u0009ret.push_back(\u0027.\u0027);
\u0009\u0009\u0009\u0009\u0009\u0009\u0009ret.append(l / 2, \u0027L\u0027);
\u0009\u0009\u0009\u0009\u0009\u0009}
\u0009\u0009\u0009\u0009\u0009\u0009else {
\u0009\u0009\u0009\u0009\u0009\u0009\u0009ret.append(l / 2 + 1, \u0027R\u0027);
\u0009\u0009\u0009\u0009\u0009\u0009\u0009ret.append(l / 2 + 1, \u0027L\u0027);
\u0009\u0009\u0009\u0009\u0009\u0009}
\u0009\u0009\u0009\u0009\u0009\u0009i = j;
\u0009\u0009\u0009\u0009\u0009\u0009start = j + 1;
\u0009\u0009\u0009\u0009\u0009\u0009break;
\u0009\u0009\u0009\u0009\u0009}
\u0009\u0009\u0009\u0009\u0009else if (dominoes[j] == \u0027R\u0027)
\u0009\u0009\u0009\u0009\u0009{
\u0009\u0009\u0009\u0009\u0009\u0009ret.append(j - i, \u0027R\u0027);
\u0009\u0009\u0009\u0009\u0009\u0009i = j - 1;
\u0009\u0009\u0009\u0009\u0009\u0009start = j;
\u0009\u0009\u0009\u0009\u0009\u0009break;
\u0009\u0009\u0009\u0009\u0009}
\u0009\u0009\u0009\u0009\u0009++j;
\u0009\u0009\u0009\u0009}
\u0009\u0009\u0009}
\u0009\u0009\u0009if (i == length)
\u0009\u0009\u0009\u0009ret.append(i - start, \u0027.\u0027);
\u0009\u0009}
\u0009\u0009return ret;
\u0009}
};
